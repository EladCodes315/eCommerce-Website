{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nimport axios from 'axios';\nexport const addToCart = (productId, quantity, account) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`http://localhost:4000/products/${productId}`);\n  account.cart.push(data);\n  let accountToUpdate = {\n    username: account.username,\n    password: account.password,\n    cart: [...account.cart]\n  };\n  await axios.put(`http://localhost:4000/accounts/${account._id}`, accountToUpdate);\n  dispatch({\n    type: actionTypes.ADD_TO_CART,\n    payload: {\n      productId: data._id,\n      name: data.name,\n      imageUrl: data.imageUrl,\n      price: data.price,\n      countInStock: data.countInStock,\n      quantity\n    }\n  });\n  localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.REMOVE_FROM_CART,\n    payload: id\n  });\n  localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n};","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Website/frontend/src/redux/actions/cartActions.js"],"names":["actionTypes","axios","addToCart","productId","quantity","account","dispatch","getState","data","get","cart","push","accountToUpdate","username","password","put","_id","type","ADD_TO_CART","payload","name","imageUrl","price","countInStock","localStorage","setItem","JSON","stringify","cartItems","removeFromCart","id","REMOVE_FROM_CART"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,OAAtB,KAAkC,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxF,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMP,KAAK,CAACQ,GAAN,CAAW,kCAAiCN,SAAU,EAAtD,CAAvB;AACAE,EAAAA,OAAO,CAACK,IAAR,CAAaC,IAAb,CAAkBH,IAAlB;AACA,MAAII,eAAe,GAAG;AACrBC,IAAAA,QAAQ,EAAER,OAAO,CAACQ,QADG;AAErBC,IAAAA,QAAQ,EAAET,OAAO,CAACS,QAFG;AAGrBJ,IAAAA,IAAI,EAAE,CAAE,GAAGL,OAAO,CAACK,IAAb;AAHe,GAAtB;AAKA,QAAMT,KAAK,CAACc,GAAN,CAAW,kCAAiCV,OAAO,CAACW,GAAI,EAAxD,EAA2DJ,eAA3D,CAAN;AACAN,EAAAA,QAAQ,CAAC;AACRW,IAAAA,IAAI,EAAEjB,WAAW,CAACkB,WADV;AAERC,IAAAA,OAAO,EAAE;AACRhB,MAAAA,SAAS,EAAEK,IAAI,CAACQ,GADR;AAERI,MAAAA,IAAI,EAAEZ,IAAI,CAACY,IAFH;AAGRC,MAAAA,QAAQ,EAAEb,IAAI,CAACa,QAHP;AAIRC,MAAAA,KAAK,EAAEd,IAAI,CAACc,KAJJ;AAKRC,MAAAA,YAAY,EAAEf,IAAI,CAACe,YALX;AAMRnB,MAAAA;AANQ;AAFD,GAAD,CAAR;AAYAoB,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAepB,QAAQ,GAAGG,IAAX,CAAgBkB,SAA/B,CAA7B;AACA,CAtBM;AAwBP,OAAO,MAAMC,cAAc,GAAGC,EAAE,IAAI,CAACxB,QAAD,EAAWC,QAAX,KAAwB;AAC3DD,EAAAA,QAAQ,CAAC;AACRW,IAAAA,IAAI,EAAEjB,WAAW,CAAC+B,gBADV;AAERZ,IAAAA,OAAO,EAAEW;AAFD,GAAD,CAAR;AAKAN,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAepB,QAAQ,GAAGG,IAAX,CAAgBkB,SAA/B,CAA7B;AACA,CAPM","sourcesContent":["import * as actionTypes from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\nexport const addToCart = (productId, quantity, account) => async (dispatch, getState) => {\r\n\tconst { data } = await axios.get(`http://localhost:4000/products/${productId}`);\r\n\taccount.cart.push(data);\r\n\tlet accountToUpdate = {\r\n\t\tusername: account.username,\r\n\t\tpassword: account.password,\r\n\t\tcart: [ ...account.cart ]\r\n\t};\r\n\tawait axios.put(`http://localhost:4000/accounts/${account._id}`, accountToUpdate);\r\n\tdispatch({\r\n\t\ttype: actionTypes.ADD_TO_CART,\r\n\t\tpayload: {\r\n\t\t\tproductId: data._id,\r\n\t\t\tname: data.name,\r\n\t\t\timageUrl: data.imageUrl,\r\n\t\t\tprice: data.price,\r\n\t\t\tcountInStock: data.countInStock,\r\n\t\t\tquantity\r\n\t\t}\r\n\t});\r\n\r\n\tlocalStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = id => (dispatch, getState) => {\r\n\tdispatch({\r\n\t\ttype: actionTypes.REMOVE_FROM_CART,\r\n\t\tpayload: id\r\n\t});\r\n\r\n\tlocalStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}