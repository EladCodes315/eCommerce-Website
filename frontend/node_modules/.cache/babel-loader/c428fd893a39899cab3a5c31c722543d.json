{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nimport axios from 'axios';\nexport const addToCart = (productId, quantity, account) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.ADD_TO_CART_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://localhost:4000/products/${productId}`);\n    account.cart.push({\n      productId: data._id,\n      name: data.name,\n      imageUrl: data.imageUrl,\n      price: data.price,\n      countInStock: data.countInStock,\n      quantity\n    });\n    let accountToUpdate = {\n      username: account.username,\n      password: account.password,\n      cart: [...account.cart]\n    };\n    await axios.put(`http://localhost:4000/accounts/${account._id}`, [...account.cart]);\n    dispatch({\n      type: actionTypes.ADD_TO_CART_SUCCESS,\n      payload: {\n        productId: data._id,\n        name: data.name,\n        imageUrl: data.imageUrl,\n        price: data.price,\n        countInStock: data.countInStock,\n        quantity\n      }\n    });\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    dispatch({\n      type: actionTypes.ADD_TO_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const removeFromCart = (productId, account) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.REMOVE_FROM_CART_REQUEST\n    });\n    await axios.put(`http://localhost:4000/accounts/${account._id}`, [...account.cart.filter(product => product.productId !== productId)]);\n    dispatch({\n      type: actionTypes.REMOVE_FROM_CART_SUCCESS,\n      payload: productId\n    });\n    localStorage.setItem('cart', JSON.stringify(getState().getAccounts.loggedUser.cart));\n  } catch (error) {\n    dispatch({\n      type: actionTypes.REMOVE_FROM_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getAccountCart = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actionTypes.LOAD_ACCOUNT_CART_REQUEST\n    });\n    let {\n      data\n    } = await axios.get(`http://localhost:4000/accounts/${id}`);\n    dispatch({\n      type: actionTypes.LOAD_ACCOUNT_CART_SUCCESS,\n      payload: [...data.cart]\n    });\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    dispatch({\n      type: actionTypes.LOAD_ACCOUNT_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Website/frontend/src/redux/actions/cartActions.js"],"names":["actionTypes","axios","addToCart","productId","quantity","account","dispatch","getState","type","ADD_TO_CART_REQUEST","data","get","cart","push","_id","name","imageUrl","price","countInStock","accountToUpdate","username","password","put","ADD_TO_CART_SUCCESS","payload","localStorage","setItem","JSON","stringify","cartItems","error","ADD_TO_CART_FAIL","response","message","removeFromCart","REMOVE_FROM_CART_REQUEST","filter","product","REMOVE_FROM_CART_SUCCESS","getAccounts","loggedUser","REMOVE_FROM_CART_FAIL","getAccountCart","id","LOAD_ACCOUNT_CART_REQUEST","LOAD_ACCOUNT_CART_SUCCESS","LOAD_ACCOUNT_CART_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,OAAtB,KAAkC,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxF,MAAI;AACHD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER,WAAW,CAACS;AAApB,KAAD,CAAR;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACU,GAAN,CAAW,kCAAiCR,SAAU,EAAtD,CAAvB;AAEAE,IAAAA,OAAO,CAACO,IAAR,CAAaC,IAAb,CAAkB;AACjBV,MAAAA,SAAS,EAAEO,IAAI,CAACI,GADC;AAEjBC,MAAAA,IAAI,EAAEL,IAAI,CAACK,IAFM;AAGjBC,MAAAA,QAAQ,EAAEN,IAAI,CAACM,QAHE;AAIjBC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAJK;AAKjBC,MAAAA,YAAY,EAAER,IAAI,CAACQ,YALF;AAMjBd,MAAAA;AANiB,KAAlB;AAQA,QAAIe,eAAe,GAAG;AACrBC,MAAAA,QAAQ,EAAEf,OAAO,CAACe,QADG;AAErBC,MAAAA,QAAQ,EAAEhB,OAAO,CAACgB,QAFG;AAGrBT,MAAAA,IAAI,EAAE,CAAE,GAAGP,OAAO,CAACO,IAAb;AAHe,KAAtB;AAKA,UAAMX,KAAK,CAACqB,GAAN,CAAW,kCAAiCjB,OAAO,CAACS,GAAI,EAAxD,EAA2D,CAAE,GAAGT,OAAO,CAACO,IAAb,CAA3D,CAAN;AAEAN,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAER,WAAW,CAACuB,mBADV;AAERC,MAAAA,OAAO,EAAE;AACRrB,QAAAA,SAAS,EAAEO,IAAI,CAACI,GADR;AAERC,QAAAA,IAAI,EAAEL,IAAI,CAACK,IAFH;AAGRC,QAAAA,QAAQ,EAAEN,IAAI,CAACM,QAHP;AAIRC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAJJ;AAKRC,QAAAA,YAAY,EAAER,IAAI,CAACQ,YALX;AAMRd,QAAAA;AANQ;AAFD,KAAD,CAAR;AAYAqB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAerB,QAAQ,GAAGK,IAAX,CAAgBiB,SAA/B,CAA7B;AACA,GAhCD,CAgCE,OAAOC,KAAP,EAAc;AACfxB,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAER,WAAW,CAAC+B,gBADV;AAERP,MAAAA,OAAO,EAAEM,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAetB,IAAf,CAAoBuB,OAAtC,GAAgDH,KAAK,CAACE,QAAN,CAAetB,IAAf,CAAoBuB,OAApE,GAA8EH,KAAK,CAACG;AAFrF,KAAD,CAAR;AAIA;AACD,CAvCM;AAyCP,OAAO,MAAMC,cAAc,GAAG,CAAC/B,SAAD,EAAYE,OAAZ,KAAwB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnF,MAAI;AACHD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER,WAAW,CAACmC;AAApB,KAAD,CAAR;AAEA,UAAMlC,KAAK,CAACqB,GAAN,CAAW,kCAAiCjB,OAAO,CAACS,GAAI,EAAxD,EAA2D,CAAE,GAAGT,OAAO,CAACO,IAAR,CAAawB,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAAClC,SAAR,KAAsBA,SAArD,CAAL,CAA3D,CAAN;AACAG,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAER,WAAW,CAACsC,wBADV;AAERd,MAAAA,OAAO,EAAErB;AAFD,KAAD,CAAR;AAKAsB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAerB,QAAQ,GAAGgC,WAAX,CAAuBC,UAAvB,CAAkC5B,IAAjD,CAA7B;AACA,GAVD,CAUE,OAAOkB,KAAP,EAAc;AACfxB,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAER,WAAW,CAACyC,qBADV;AAERjB,MAAAA,OAAO,EAAEM,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAetB,IAAf,CAAoBuB,OAAtC,GAAgDH,KAAK,CAACE,QAAN,CAAetB,IAAf,CAAoBuB,OAApE,GAA8EH,KAAK,CAACG;AAFrF,KAAD,CAAR;AAIA;AACD,CAjBM;AAmBP,OAAO,MAAMS,cAAc,GAAGC,EAAE,IAAI,OAAOrC,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,MAAI;AACHD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER,WAAW,CAAC4C;AAApB,KAAD,CAAR;AACA,QAAI;AAAElC,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACU,GAAN,CAAW,kCAAiCgC,EAAG,EAA/C,CAArB;AACArC,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAER,WAAW,CAAC6C,yBADV;AAERrB,MAAAA,OAAO,EAAE,CAAE,GAAGd,IAAI,CAACE,IAAV;AAFD,KAAD,CAAR;AAIAa,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAerB,QAAQ,GAAGK,IAAX,CAAgBiB,SAA/B,CAA7B;AACA,GARD,CAQE,OAAOC,KAAP,EAAc;AACfxB,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAER,WAAW,CAAC8C,sBADV;AAERtB,MAAAA,OAAO,EAAEM,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAetB,IAAf,CAAoBuB,OAAtC,GAAgDH,KAAK,CAACE,QAAN,CAAetB,IAAf,CAAoBuB,OAApE,GAA8EH,KAAK,CAACG;AAFrF,KAAD,CAAR;AAIA;AACD,CAfM","sourcesContent":["import * as actionTypes from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\nexport const addToCart = (productId, quantity, account) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: actionTypes.ADD_TO_CART_REQUEST });\r\n\t\tconst { data } = await axios.get(`http://localhost:4000/products/${productId}`);\r\n\r\n\t\taccount.cart.push({\r\n\t\t\tproductId: data._id,\r\n\t\t\tname: data.name,\r\n\t\t\timageUrl: data.imageUrl,\r\n\t\t\tprice: data.price,\r\n\t\t\tcountInStock: data.countInStock,\r\n\t\t\tquantity\r\n\t\t});\r\n\t\tlet accountToUpdate = {\r\n\t\t\tusername: account.username,\r\n\t\t\tpassword: account.password,\r\n\t\t\tcart: [ ...account.cart ]\r\n\t\t};\r\n\t\tawait axios.put(`http://localhost:4000/accounts/${account._id}`, [ ...account.cart ]);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.ADD_TO_CART_SUCCESS,\r\n\t\t\tpayload: {\r\n\t\t\t\tproductId: data._id,\r\n\t\t\t\tname: data.name,\r\n\t\t\t\timageUrl: data.imageUrl,\r\n\t\t\t\tprice: data.price,\r\n\t\t\t\tcountInStock: data.countInStock,\r\n\t\t\t\tquantity\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.ADD_TO_CART_FAIL,\r\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const removeFromCart = (productId, account) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: actionTypes.REMOVE_FROM_CART_REQUEST });\r\n\r\n\t\tawait axios.put(`http://localhost:4000/accounts/${account._id}`, [ ...account.cart.filter(product => product.productId !== productId) ]);\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.REMOVE_FROM_CART_SUCCESS,\r\n\t\t\tpayload: productId\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem('cart', JSON.stringify(getState().getAccounts.loggedUser.cart));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.REMOVE_FROM_CART_FAIL,\r\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getAccountCart = id => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: actionTypes.LOAD_ACCOUNT_CART_REQUEST });\r\n\t\tlet { data } = await axios.get(`http://localhost:4000/accounts/${id}`);\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.LOAD_ACCOUNT_CART_SUCCESS,\r\n\t\t\tpayload: [ ...data.cart ]\r\n\t\t});\r\n\t\tlocalStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.LOAD_ACCOUNT_CART_FAIL,\r\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n\t\t});\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}