{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { cartReducer } from './reducers/cartReducer';\nimport { getProductsReducer } from './reducers/productReducers';\nimport { getProductDetailsReducer } from './reducers/productReducers';\nimport axios from 'axios';\nconst reducer = combineReducers({\n  cart: cartReducer,\n  getProducts: getProductsReducer,\n  getProductDetails: getProductDetailsReducer\n});\nconst middleware = [thunk];\nconst cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\n\nconst cartFromDB = async id => {\n  let {\n    data\n  } = await axios.get(`http://localhost:4000/accounts/${id}`);\n  return { ...data.cart\n  };\n};\n\nconst initialState = {\n  cart: {\n    cartItems: cartFromLocalStorage\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Website/frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","cartReducer","getProductsReducer","getProductDetailsReducer","axios","reducer","cart","getProducts","getProductDetails","middleware","cartFromLocalStorage","localStorage","getItem","JSON","parse","cartFromDB","id","data","get","initialState","cartItems","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC/BS,EAAAA,IAAI,EAAEL,WADyB;AAE/BM,EAAAA,WAAW,EAAEL,kBAFkB;AAG/BM,EAAAA,iBAAiB,EAAEL;AAHY,CAAD,CAA/B;AAMA,MAAMM,UAAU,GAAG,CAAEV,KAAF,CAAnB;AAEA,MAAMW,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E,EAAvG;;AAEA,MAAMG,UAAU,GAAG,MAAMC,EAAN,IAAY;AAC9B,MAAI;AAAEC,IAAAA;AAAF,MAAW,MAAMb,KAAK,CAACc,GAAN,CAAW,kCAAiCF,EAAG,EAA/C,CAArB;AACA,SAAO,EAAE,GAAGC,IAAI,CAACX;AAAV,GAAP;AACA,CAHD;;AAKA,MAAMa,YAAY,GAAG;AACpBb,EAAAA,IAAI,EAAE;AACLc,IAAAA,SAAS,EAAEV;AADN;AADc,CAArB;AAMA,MAAMW,KAAK,GAAGzB,WAAW,CAACS,OAAD,EAAUc,YAAV,EAAwBnB,mBAAmB,CAACF,eAAe,CAAC,GAAGW,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeY,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { cartReducer } from './reducers/cartReducer';\r\nimport { getProductsReducer } from './reducers/productReducers';\r\nimport { getProductDetailsReducer } from './reducers/productReducers';\r\nimport axios from 'axios';\r\n\r\nconst reducer = combineReducers({\r\n\tcart: cartReducer,\r\n\tgetProducts: getProductsReducer,\r\n\tgetProductDetails: getProductDetailsReducer\r\n});\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\r\n\r\nconst cartFromDB = async id => {\r\n\tlet { data } = await axios.get(`http://localhost:4000/accounts/${id}`);\r\n\treturn { ...data.cart };\r\n};\r\n\r\nconst initialState = {\r\n\tcart: {\r\n\t\tcartItems: cartFromLocalStorage\r\n\t}\r\n};\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}