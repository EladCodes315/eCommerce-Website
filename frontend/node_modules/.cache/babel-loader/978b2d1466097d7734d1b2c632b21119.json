{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elada\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\Fullstack Projects\\\\eCommerce-Website\\\\frontend\\\\src\\\\screens\\\\CartScreenComp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CartItemComp from '../components/CartItemComp';\nimport './CartScreenComp.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart, removeFromCart } from '../redux/actions/accountActions';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartScreenComp = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(state => state.getLoggedUser.loggedUser);\n\n  const quantityChangeHandler = (productId, quantity) => {\n    dispatch(addToCart(productId, quantity, loggedUser));\n  };\n\n  const removeFromCartHandler = productId => {\n    dispatch(removeFromCart(productId, loggedUser));\n  };\n\n  const getCartCount = () => {\n    return loggedUser.cart.reduce((cartCount, item) => Number(item.quantity) + cartCount, 0);\n  };\n\n  const getCartSubtotal = () => {\n    return loggedUser.cart.reduce((subtotal, item) => item.quantity * item.price + subtotal, 0);\n  };\n\n  const checkoutHandler = async () => {\n    try {\n      let url = await axios.post('http://localhost:4000/checkout', loggedUser.cart);\n      console.log(url);\n      history.push(url);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cartscreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cartscreen-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" My Cart \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), loggedUser.cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Your Cart is Empty! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this) : loggedUser.cart.map((item, index) => /*#__PURE__*/_jsxDEV(CartItemComp, {\n        item: item,\n        quantityChangeHandler: quantityChangeHandler,\n        removeFromCartHandler: removeFromCartHandler\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cartscreen-right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cartscreen-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Subtotal (\", getCartCount(), \") items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \\u20AA\", getCartSubtotal().toFixed(2), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: checkoutHandler,\n            children: \"Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CartScreenComp, \"tRViYPXupPxwn6NHQGRQqcFvdJw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreenComp;\nexport default CartScreenComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreenComp\");","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Website/frontend/src/screens/CartScreenComp.js"],"names":["React","CartItemComp","useDispatch","useSelector","addToCart","removeFromCart","axios","CartScreenComp","history","dispatch","loggedUser","state","getLoggedUser","quantityChangeHandler","productId","quantity","removeFromCartHandler","getCartCount","cart","reduce","cartCount","item","Number","getCartSubtotal","subtotal","price","checkoutHandler","url","post","console","log","push","error","alert","message","length","map","index","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CartItemComp from '../components/CartItemComp';\r\n\r\nimport './CartScreenComp.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addToCart, removeFromCart } from '../redux/actions/accountActions';\r\nimport axios from 'axios';\r\n\r\nconst CartScreenComp = ({ history }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst loggedUser = useSelector(state => state.getLoggedUser.loggedUser);\r\n\r\n\tconst quantityChangeHandler = (productId, quantity) => {\r\n\t\tdispatch(addToCart(productId, quantity, loggedUser));\r\n\t};\r\n\r\n\tconst removeFromCartHandler = productId => {\r\n\t\tdispatch(removeFromCart(productId, loggedUser));\r\n\t};\r\n\r\n\tconst getCartCount = () => {\r\n\t\treturn loggedUser.cart.reduce((cartCount, item) => Number(item.quantity) + cartCount, 0);\r\n\t};\r\n\r\n\tconst getCartSubtotal = () => {\r\n\t\treturn loggedUser.cart.reduce((subtotal, item) => item.quantity * item.price + subtotal, 0);\r\n\t};\r\n\r\n\tconst checkoutHandler = async () => {\r\n\t\ttry {\r\n\t\t\tlet url = await axios.post('http://localhost:4000/checkout', loggedUser.cart);\r\n\t\t\tconsole.log(url);\r\n\t\t\thistory.push(url);\r\n\t\t} catch (error) {\r\n\t\t\talert(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"cartscreen\">\r\n\t\t\t<div className=\"cartscreen-left\">\r\n\t\t\t\t<h2> My Cart </h2>\r\n\t\t\t\t{loggedUser.cart.length === 0 ? (\r\n\t\t\t\t\t<div> Your Cart is Empty! </div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\tloggedUser.cart.map((item, index) => (\r\n\t\t\t\t\t\t<CartItemComp\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\tquantityChangeHandler={quantityChangeHandler}\r\n\t\t\t\t\t\t\tremoveFromCartHandler={removeFromCartHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"cartscreen-right\">\r\n\t\t\t\t<div className=\"cartscreen-info\">\r\n\t\t\t\t\t<p> Subtotal ({getCartCount()}) items</p>\r\n\t\t\t\t\t<p> ₪{getCartSubtotal().toFixed(2)} </p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button onClick={checkoutHandler}>Checkout</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CartScreenComp;\r\n"]},"metadata":{},"sourceType":"module"}