{"ast":null,"code":"import * as actionTypes from '../constants/accountConstants';\nexport const getAccountsReducer = (state = {\n  accounts: [],\n  loggedUser: {}\n}, action) => {\n  switch (action.type) {\n    case actionTypes.GET_ACCOUNTS_REQUEST:\n      {\n        return {\n          loading: true,\n          loggedUser: localStorage.getItem('loggedUser') ? JSON.parse(localStorage.getItem('loggedUser')) : {},\n          accounts: []\n        };\n      }\n\n    case actionTypes.GET_ACCOUNTS_SUCCESS:\n      {\n        return {\n          loading: false,\n          loggedUser: localStorage.getItem('loggedUser') ? JSON.parse(localStorage.getItem('loggedUser')) : {},\n          accounts: action.payload\n        };\n      }\n\n    case actionTypes.GET_ACCOUNTS_FAIL:\n      {\n        return {\n          loading: false,\n          loggedUser: localStorage.getItem('loggedUser') ? JSON.parse(localStorage.getItem('loggedUser')) : {},\n          error: action.payload\n        };\n      }\n\n    case actionTypes.POST_ACCOUNT_REQUEST:\n      {\n        return {\n          loading: true,\n          accounts: [...state.accounts]\n        };\n      }\n\n    case actionTypes.POST_ACCOUNT_SUCCESS:\n      {\n        return {\n          loading: false,\n          accounts: [...state.accounts, action.payload]\n        };\n      }\n\n    case actionTypes.POST_ACCOUNT_FAIL:\n      {\n        return {\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    case actionTypes.LOGIN_ACCOUNT:\n      {\n        localStorage.setItem('loggedUser', JSON.stringify(action.payload));\n        return {\n          loggedUser: action.payload,\n          accounts: [...state.accounts]\n        };\n      }\n\n    case actionTypes.LOAD_ACCOUNT_CART_REQUEST:\n      {\n        return {\n          loading: true,\n          cartItems: []\n        };\n      }\n\n    case actionTypes.LOAD_ACCOUNT_CART_SUCCESS:\n      {\n        return {\n          loading: false,\n          cartItems: action.payload\n        };\n      }\n\n    case actionTypes.LOAD_ACCOUNT_CART_FAIL:\n      {\n        return {\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    case actionTypes.ADD_TO_CART_REQUEST:\n      {\n        return {\n          loading: true,\n          cartItems: [...state.cartItems]\n        };\n      }\n\n    case actionTypes.ADD_TO_CART_SUCCESS:\n      {\n        const item = action.payload;\n        const existInCart = state.cartItems.find(x => x.productId === item.productId);\n\n        if (existInCart) {\n          return {\n            loading: false,\n            cartItems: state.cartItems.map(x => x.productId === existInCart.productId ? item : x)\n          };\n        } else {\n          return {\n            loading: false,\n            cartItems: [...state.cartItems, item]\n          };\n        }\n      }\n\n    case actionTypes.ADD_TO_CART_FAIL:\n      {\n        return {\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART_REQUEST:\n      {\n        return {\n          loading: true,\n          cartItems: [...state.cartItems]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART_SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          cartItems: state.cartItems.filter(x => x.productId !== action.payload)\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART_FAIL:\n      {\n        return {\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART_REQUEST:\n      {\n        return {\n          loading: true,\n          loggedUser: { ...state.loggedUser\n          },\n          accounts: [...state.accounts]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART_SUCCESS:\n      {\n        return {\n          loading: false,\n          loggedUser: { ...state.loggedUser,\n            cart: action.payload\n          },\n          accounts: [...state.accounts]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART_FAIL:\n      {\n        return {\n          loading: false,\n          loggedUser: { ...state.loggedUser\n          },\n          accounts: [...state.accounts],\n          error: action.payload\n        };\n      }\n\n    case actionTypes.LOGOUT_ACCOUNT:\n      {\n        localStorage.setItem('loggedUser', {});\n        return {\n          loggedUser: {},\n          accounts: [...state.accounts]\n        };\n      }\n\n    case actionTypes.RESET_CART:\n      {\n        localStorage.setItem('cart', []);\n        return {\n          loading: false,\n          cartItems: []\n        };\n      }\n\n    default:\n      {\n        return { ...state\n        };\n      }\n  }\n};","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Website/frontend/src/redux/reducers/accountReducers.js"],"names":["actionTypes","getAccountsReducer","state","accounts","loggedUser","action","type","GET_ACCOUNTS_REQUEST","loading","localStorage","getItem","JSON","parse","GET_ACCOUNTS_SUCCESS","payload","GET_ACCOUNTS_FAIL","error","POST_ACCOUNT_REQUEST","POST_ACCOUNT_SUCCESS","POST_ACCOUNT_FAIL","LOGIN_ACCOUNT","setItem","stringify","LOAD_ACCOUNT_CART_REQUEST","cartItems","LOAD_ACCOUNT_CART_SUCCESS","LOAD_ACCOUNT_CART_FAIL","ADD_TO_CART_REQUEST","ADD_TO_CART_SUCCESS","item","existInCart","find","x","productId","map","ADD_TO_CART_FAIL","REMOVE_FROM_CART_REQUEST","REMOVE_FROM_CART_SUCCESS","filter","REMOVE_FROM_CART_FAIL","cart","LOGOUT_ACCOUNT","RESET_CART"],"mappings":"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","sourcesContent":["import * as actionTypes from '../constants/accountConstants';\r\n\r\nexport const getAccountsReducer = (state = { accounts: [], loggedUser: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.GET_ACCOUNTS_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\tloggedUser: localStorage.getItem('loggedUser') ? JSON.parse(localStorage.getItem('loggedUser')) : {},\r\n\t\t\t\taccounts: []\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.GET_ACCOUNTS_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tloggedUser: localStorage.getItem('loggedUser') ? JSON.parse(localStorage.getItem('loggedUser')) : {},\r\n\t\t\t\taccounts: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.GET_ACCOUNTS_FAIL: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tloggedUser: localStorage.getItem('loggedUser') ? JSON.parse(localStorage.getItem('loggedUser')) : {},\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.POST_ACCOUNT_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\taccounts: [ ...state.accounts ]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.POST_ACCOUNT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\taccounts: [ ...state.accounts, action.payload ]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.POST_ACCOUNT_FAIL: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.LOGIN_ACCOUNT: {\r\n\t\t\tlocalStorage.setItem('loggedUser', JSON.stringify(action.payload));\r\n\t\t\treturn {\r\n\t\t\t\tloggedUser: action.payload,\r\n\t\t\t\taccounts: [ ...state.accounts ]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.LOAD_ACCOUNT_CART_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\tcartItems: []\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.LOAD_ACCOUNT_CART_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcartItems: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.LOAD_ACCOUNT_CART_FAIL: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.ADD_TO_CART_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\tcartItems: [ ...state.cartItems ]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.ADD_TO_CART_SUCCESS: {\r\n\t\t\tconst item = action.payload;\r\n\t\t\tconst existInCart = state.cartItems.find(x => x.productId === item.productId);\r\n\t\t\tif (existInCart) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\tcartItems: state.cartItems.map(x => (x.productId === existInCart.productId ? item : x))\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\tcartItems: [ ...state.cartItems, item ]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase actionTypes.ADD_TO_CART_FAIL: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.REMOVE_FROM_CART_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\tcartItems: [ ...state.cartItems ]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.REMOVE_FROM_CART_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcartItems: state.cartItems.filter(x => x.productId !== action.payload)\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.REMOVE_FROM_CART_FAIL: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.REMOVE_FROM_CART_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\tloggedUser: { ...state.loggedUser },\r\n\t\t\t\taccounts: [ ...state.accounts ]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.REMOVE_FROM_CART_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tloggedUser: { ...state.loggedUser, cart: action.payload },\r\n\t\t\t\taccounts: [ ...state.accounts ]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.REMOVE_FROM_CART_FAIL: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tloggedUser: { ...state.loggedUser },\r\n\t\t\t\taccounts: [ ...state.accounts ],\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.LOGOUT_ACCOUNT: {\r\n\t\t\tlocalStorage.setItem('loggedUser', {});\r\n\t\t\treturn {\r\n\t\t\t\tloggedUser: {},\r\n\t\t\t\taccounts: [ ...state.accounts ]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.RESET_CART: {\r\n\t\t\tlocalStorage.setItem('cart', []);\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcartItems: []\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn { ...state };\r\n\t\t}\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}