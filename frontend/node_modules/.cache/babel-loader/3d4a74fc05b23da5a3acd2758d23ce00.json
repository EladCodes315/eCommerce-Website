{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nimport axios from 'axios';\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`http://localhost:4000/products/${id}`);\n  dispatch({\n    type: actionTypes.ADD_TO_CART,\n    payload: {\n      productId: data._id,\n      name: data.name,\n      imageUrl: data.imageUrl,\n      price: data.price,\n      countInStock: data.countInStock,\n      quantity\n    }\n  });\n  localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.ADD_TO_CART,\n    payload: id\n  });\n  localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n};","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Websie/frontend/src/redux/actions/cartActions.js"],"names":["actionTypes","axios","addToCart","id","quantity","dispatch","getState","data","get","type","ADD_TO_CART","payload","productId","_id","name","imageUrl","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMN,KAAK,CAACO,GAAN,CAAW,kCAAiCL,EAAG,EAA/C,CAAvB;AAEAE,EAAAA,QAAQ,CAAC;AACRI,IAAAA,IAAI,EAAET,WAAW,CAACU,WADV;AAERC,IAAAA,OAAO,EAAE;AACRC,MAAAA,SAAS,EAAEL,IAAI,CAACM,GADR;AAERC,MAAAA,IAAI,EAAEP,IAAI,CAACO,IAFH;AAGRC,MAAAA,QAAQ,EAAER,IAAI,CAACQ,QAHP;AAIRC,MAAAA,KAAK,EAAET,IAAI,CAACS,KAJJ;AAKRC,MAAAA,YAAY,EAAEV,IAAI,CAACU,YALX;AAMRb,MAAAA;AANQ;AAFD,GAAD,CAAR;AAYAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAA7B;AACA,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAGrB,EAAE,IAAI,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC3DD,EAAAA,QAAQ,CAAC;AACRI,IAAAA,IAAI,EAAET,WAAW,CAACU,WADV;AAERC,IAAAA,OAAO,EAAER;AAFD,GAAD,CAAR;AAKAe,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAA7B;AACA,CAPM","sourcesContent":["import * as actionTypes from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\r\n\tconst { data } = await axios.get(`http://localhost:4000/products/${id}`);\r\n\r\n\tdispatch({\r\n\t\ttype: actionTypes.ADD_TO_CART,\r\n\t\tpayload: {\r\n\t\t\tproductId: data._id,\r\n\t\t\tname: data.name,\r\n\t\t\timageUrl: data.imageUrl,\r\n\t\t\tprice: data.price,\r\n\t\t\tcountInStock: data.countInStock,\r\n\t\t\tquantity\r\n\t\t}\r\n\t});\r\n\r\n\tlocalStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = id => (dispatch, getState) => {\r\n\tdispatch({\r\n\t\ttype: actionTypes.ADD_TO_CART,\r\n\t\tpayload: id\r\n\t});\r\n\r\n\tlocalStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}