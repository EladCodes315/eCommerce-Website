{"ast":null,"code":"import * as actionTypes from '../constants/accountConstants';\nexport const getLoggedUserReducer = (state = {\n  loggedUser: {}\n}, action) => {\n  switch (action.type) {\n    case actionTypes.POST_ACCOUNT_REQUEST:\n      {\n        return {\n          loading: true,\n          loggedUser: { ...state.loggedUser\n          }\n        };\n      }\n\n    case actionTypes.POST_ACCOUNT_SUCCESS:\n      {\n        return {\n          loading: false\n        };\n      }\n\n    case actionTypes.POST_ACCOUNT_FAIL:\n      {\n        return {\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    case actionTypes.LOGIN_ACCOUNT:\n      {\n        localStorage.setItem('loggedUser', JSON.stringify(action.payload));\n        return {\n          loggedUser: action.payload\n        };\n      }\n\n    case actionTypes.ADD_TO_CART_REQUEST:\n      {\n        return {\n          loading: true,\n          loggedUser: { ...state.loggedUser\n          }\n        };\n      }\n\n    case actionTypes.ADD_TO_CART_SUCCESS:\n      {\n        return {\n          loading: false,\n          loggedUser: { ...state.loggedUser,\n            cart: [...action.payload]\n          }\n        };\n      }\n\n    case actionTypes.ADD_TO_CART_FAIL:\n      {\n        return {\n          loading: false,\n          loggedUser: { ...state.loggedUser\n          },\n          error: action.payload\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART_REQUEST:\n      {\n        return {\n          loading: true,\n          loggedUser: { ...state.loggedUser\n          }\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART_SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          loggedUser: { ...state.loggedUser,\n            cart: action.payload\n          }\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART_FAIL:\n      {\n        return {\n          loading: false,\n          loggedUser: { ...state.loggedUser\n          },\n          error: action.payload\n        };\n      }\n\n    case actionTypes.LOGOUT_ACCOUNT:\n      {\n        localStorage.setItem('loggedUser', '{}');\n        return {\n          loggedUser: {}\n        };\n      }\n\n    default:\n      {\n        return { ...state\n        };\n      }\n  }\n};","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Website/frontend/src/redux/reducers/accountReducers.js"],"names":["actionTypes","getLoggedUserReducer","state","loggedUser","action","type","POST_ACCOUNT_REQUEST","loading","POST_ACCOUNT_SUCCESS","POST_ACCOUNT_FAIL","error","payload","LOGIN_ACCOUNT","localStorage","setItem","JSON","stringify","ADD_TO_CART_REQUEST","ADD_TO_CART_SUCCESS","cart","ADD_TO_CART_FAIL","REMOVE_FROM_CART_REQUEST","REMOVE_FROM_CART_SUCCESS","REMOVE_FROM_CART_FAIL","LOGOUT_ACCOUNT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,+BAA7B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAT,EAA6BC,MAA7B,KAAwC;AAC3E,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKL,WAAW,CAACM,oBAAjB;AAAuC;AACtC,eAAO;AACNC,UAAAA,OAAO,EAAE,IADH;AAENJ,UAAAA,UAAU,EAAE,EAAE,GAAGD,KAAK,CAACC;AAAX;AAFN,SAAP;AAIA;;AACD,SAAKH,WAAW,CAACQ,oBAAjB;AAAuC;AACtC,eAAO;AACND,UAAAA,OAAO,EAAE;AADH,SAAP;AAGA;;AACD,SAAKP,WAAW,CAACS,iBAAjB;AAAoC;AACnC,eAAO;AACNF,UAAAA,OAAO,EAAE,KADH;AAENG,UAAAA,KAAK,EAAEN,MAAM,CAACO;AAFR,SAAP;AAIA;;AACD,SAAKX,WAAW,CAACY,aAAjB;AAAgC;AAC/BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeZ,MAAM,CAACO,OAAtB,CAAnC;AACA,eAAO;AACNR,UAAAA,UAAU,EAAEC,MAAM,CAACO;AADb,SAAP;AAGA;;AACD,SAAKX,WAAW,CAACiB,mBAAjB;AAAsC;AACrC,eAAO;AACNV,UAAAA,OAAO,EAAE,IADH;AAENJ,UAAAA,UAAU,EAAE,EAAE,GAAGD,KAAK,CAACC;AAAX;AAFN,SAAP;AAIA;;AACD,SAAKH,WAAW,CAACkB,mBAAjB;AAAsC;AACrC,eAAO;AACNX,UAAAA,OAAO,EAAE,KADH;AAENJ,UAAAA,UAAU,EAAE,EAAE,GAAGD,KAAK,CAACC,UAAX;AAAuBgB,YAAAA,IAAI,EAAE,CAAE,GAAGf,MAAM,CAACO,OAAZ;AAA7B;AAFN,SAAP;AAIA;;AACD,SAAKX,WAAW,CAACoB,gBAAjB;AAAmC;AAClC,eAAO;AACNb,UAAAA,OAAO,EAAE,KADH;AAENJ,UAAAA,UAAU,EAAE,EAAE,GAAGD,KAAK,CAACC;AAAX,WAFN;AAGNO,UAAAA,KAAK,EAAEN,MAAM,CAACO;AAHR,SAAP;AAKA;;AACD,SAAKX,WAAW,CAACqB,wBAAjB;AAA2C;AAC1C,eAAO;AACNd,UAAAA,OAAO,EAAE,IADH;AAENJ,UAAAA,UAAU,EAAE,EAAE,GAAGD,KAAK,CAACC;AAAX;AAFN,SAAP;AAIA;;AACD,SAAKH,WAAW,CAACsB,wBAAjB;AAA2C;AAC1C,eAAO,EACN,GAAGpB,KADG;AAENK,UAAAA,OAAO,EAAE,KAFH;AAGNJ,UAAAA,UAAU,EAAE,EAAE,GAAGD,KAAK,CAACC,UAAX;AAAuBgB,YAAAA,IAAI,EAAEf,MAAM,CAACO;AAApC;AAHN,SAAP;AAKA;;AACD,SAAKX,WAAW,CAACuB,qBAAjB;AAAwC;AACvC,eAAO;AACNhB,UAAAA,OAAO,EAAE,KADH;AAENJ,UAAAA,UAAU,EAAE,EAAE,GAAGD,KAAK,CAACC;AAAX,WAFN;AAGNO,UAAAA,KAAK,EAAEN,MAAM,CAACO;AAHR,SAAP;AAKA;;AACD,SAAKX,WAAW,CAACwB,cAAjB;AAAiC;AAChCX,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACA,eAAO;AACNX,UAAAA,UAAU,EAAE;AADN,SAAP;AAGA;;AACD;AAAS;AACR,eAAO,EAAE,GAAGD;AAAL,SAAP;AACA;AAvEF;AAyEA,CA1EM","sourcesContent":["import * as actionTypes from '../constants/accountConstants';\r\n\r\nexport const getLoggedUserReducer = (state = { loggedUser: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.POST_ACCOUNT_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\tloggedUser: { ...state.loggedUser }\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.POST_ACCOUNT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.POST_ACCOUNT_FAIL: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.LOGIN_ACCOUNT: {\r\n\t\t\tlocalStorage.setItem('loggedUser', JSON.stringify(action.payload));\r\n\t\t\treturn {\r\n\t\t\t\tloggedUser: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.ADD_TO_CART_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\tloggedUser: { ...state.loggedUser }\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.ADD_TO_CART_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tloggedUser: { ...state.loggedUser, cart: [ ...action.payload ] }\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.ADD_TO_CART_FAIL: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tloggedUser: { ...state.loggedUser },\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.REMOVE_FROM_CART_REQUEST: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t\tloggedUser: { ...state.loggedUser }\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.REMOVE_FROM_CART_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tloggedUser: { ...state.loggedUser, cart: action.payload }\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.REMOVE_FROM_CART_FAIL: {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tloggedUser: { ...state.loggedUser },\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase actionTypes.LOGOUT_ACCOUNT: {\r\n\t\t\tlocalStorage.setItem('loggedUser', '{}');\r\n\t\t\treturn {\r\n\t\t\t\tloggedUser: {}\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn { ...state };\r\n\t\t}\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}