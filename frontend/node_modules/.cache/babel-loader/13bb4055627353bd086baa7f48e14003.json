{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // import { cartReducer } from './reducers/cartReducer';\n\nimport { getProductsReducer } from './reducers/productReducers';\nimport { getProductDetailsReducer } from './reducers/productReducers';\nimport { getAccountsReducer } from './reducers/accountReducers'; // import { loggedUserReducer } from './reducers/loginReducer';\n\nconst reducer = combineReducers({\n  // cart: cartReducer,\n  getProducts: getProductsReducer,\n  getProductDetails: getProductDetailsReducer,\n  accounts: getAccountsReducer // loggedUser: loggedUserReducer\n\n});\nconst middleware = [thunk];\nconst userFromLocalStorage = localStorage.getItem('loggeduser') ? JSON.parse(localStorage.getItem('loggeduser')) : {};\nconsole.log(userFromLocalStorage);\nconst initialState = {\n  accounts: {\n    loggedUser: userFromLocalStorage\n  }\n}; // const cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\n// const initialState = {\n// \tcart: {\n// \t\tcartItems: cartFromLocalStorage\n// \t}\n// };\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Website/frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","getProductsReducer","getProductDetailsReducer","getAccountsReducer","reducer","getProducts","getProductDetails","accounts","middleware","userFromLocalStorage","localStorage","getItem","JSON","parse","console","log","initialState","loggedUser","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,kBAAT,QAAmC,4BAAnC,C,CACA;;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC/B;AACAQ,EAAAA,WAAW,EAAEJ,kBAFkB;AAG/BK,EAAAA,iBAAiB,EAAEJ,wBAHY;AAI/BK,EAAAA,QAAQ,EAAEJ,kBAJqB,CAK/B;;AAL+B,CAAD,CAA/B;AAQA,MAAMK,UAAU,GAAG,CAAET,KAAF,CAAnB;AAEA,MAAMU,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAqCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAArC,GAAsF,EAAnH;AACAG,OAAO,CAACC,GAAR,CAAYN,oBAAZ;AAEA,MAAMO,YAAY,GAAG;AACpBT,EAAAA,QAAQ,EAAE;AACTU,IAAAA,UAAU,EAAER;AADH;AADU,CAArB,C,CAMA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMS,KAAK,GAAGtB,WAAW,CAACQ,OAAD,EAAUY,YAAV,EAAwBhB,mBAAmB,CAACF,eAAe,CAAC,GAAGU,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeU,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// import { cartReducer } from './reducers/cartReducer';\r\nimport { getProductsReducer } from './reducers/productReducers';\r\nimport { getProductDetailsReducer } from './reducers/productReducers';\r\nimport { getAccountsReducer } from './reducers/accountReducers';\r\n// import { loggedUserReducer } from './reducers/loginReducer';\r\n\r\nconst reducer = combineReducers({\r\n\t// cart: cartReducer,\r\n\tgetProducts: getProductsReducer,\r\n\tgetProductDetails: getProductDetailsReducer,\r\n\taccounts: getAccountsReducer\r\n\t// loggedUser: loggedUserReducer\r\n});\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst userFromLocalStorage = localStorage.getItem('loggeduser') ? JSON.parse(localStorage.getItem('loggeduser')) : {};\r\nconsole.log(userFromLocalStorage);\r\n\r\nconst initialState = {\r\n\taccounts: {\r\n\t\tloggedUser: userFromLocalStorage\r\n\t}\r\n};\r\n\r\n// const cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\r\n\r\n// const initialState = {\r\n// \tcart: {\r\n// \t\tcartItems: cartFromLocalStorage\r\n// \t}\r\n// };\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}