{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getProductsReducer } from './reducers/productReducers';\nimport { getProductDetailsReducer } from './reducers/productReducers';\nimport { getAccountsReducer } from './reducers/accountReducers';\nconst reducer = combineReducers({\n  getProducts: getProductsReducer,\n  getProductDetails: getProductDetailsReducer,\n  accounts: getAccountsReducer\n});\nconst middleware = [thunk];\nconst userFromLocalStorage = localStorage.getItem('loggedUser') ? JSON.parse(localStorage.getItem('loggedUser')) : {};\nconst initialState = {\n  accounts: {\n    loggedUser: userFromLocalStorage\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Website/frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","getProductsReducer","getProductDetailsReducer","getAccountsReducer","reducer","getProducts","getProductDetails","accounts","middleware","userFromLocalStorage","localStorage","getItem","JSON","parse","initialState","loggedUser","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC/BQ,EAAAA,WAAW,EAAEJ,kBADkB;AAE/BK,EAAAA,iBAAiB,EAAEJ,wBAFY;AAG/BK,EAAAA,QAAQ,EAAEJ;AAHqB,CAAD,CAA/B;AAMA,MAAMK,UAAU,GAAG,CAAET,KAAF,CAAnB;AAEA,MAAMU,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAqCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAArC,GAAsF,EAAnH;AAEA,MAAMG,YAAY,GAAG;AACpBP,EAAAA,QAAQ,EAAE;AACTQ,IAAAA,UAAU,EAAEN;AADH;AADU,CAArB;AAMA,MAAMO,KAAK,GAAGpB,WAAW,CAACQ,OAAD,EAAUU,YAAV,EAAwBd,mBAAmB,CAACF,eAAe,CAAC,GAAGU,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeQ,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { getProductsReducer } from './reducers/productReducers';\r\nimport { getProductDetailsReducer } from './reducers/productReducers';\r\nimport { getAccountsReducer } from './reducers/accountReducers';\r\n\r\nconst reducer = combineReducers({\r\n\tgetProducts: getProductsReducer,\r\n\tgetProductDetails: getProductDetailsReducer,\r\n\taccounts: getAccountsReducer\r\n});\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst userFromLocalStorage = localStorage.getItem('loggedUser') ? JSON.parse(localStorage.getItem('loggedUser')) : {};\r\n\r\nconst initialState = {\r\n\taccounts: {\r\n\t\tloggedUser: userFromLocalStorage\r\n\t}\r\n};\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}