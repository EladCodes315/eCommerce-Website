{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      {\n        const item = action.payload;\n        const existInCart = state.cartItems.find(x => x.productId == item.productId);\n\n        if (existInCart) {\n          return { ...state,\n            cartItems: state.cartItems.map(x => x.productId === existItem.productId ? item : x)\n          };\n        } else {\n          return { ...state,\n            cartItems: [...state.cartItems, item]\n          };\n        }\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      {\n        return { ...state,\n          cartItems: state.cartItems.filter(x => x.productId !== action.payload)\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Websie/frontend/src/redux/reducers/cartReducer.js"],"names":["actionTypes","cartReducer","state","cartItems","action","type","ADD_TO_CART","item","payload","existInCart","find","x","productId","map","existItem","REMOVE_FROM_CART","filter"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKL,WAAW,CAACM,WAAjB;AAA8B;AAC7B,cAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AAEA,cAAMC,WAAW,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,SAAF,IAAeL,IAAI,CAACK,SAA9C,CAApB;;AAEA,YAAIH,WAAJ,EAAiB;AAChB,iBAAO,EACN,GAAGP,KADG;AAENC,YAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoBF,CAAC,IAAKA,CAAC,CAACC,SAAF,KAAgBE,SAAS,CAACF,SAA1B,GAAsCL,IAAtC,GAA6CI,CAAvE;AAFL,WAAP;AAIA,SALD,MAMK;AACJ,iBAAO,EACN,GAAGT,KADG;AAENC,YAAAA,SAAS,EAAE,CAAE,GAAGD,KAAK,CAACC,SAAX,EAAsBI,IAAtB;AAFL,WAAP;AAIA;AACD;;AACD,SAAKP,WAAW,CAACe,gBAAjB;AAAmC;AAClC,eAAO,EACN,GAAGb,KADG;AAENC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBa,MAAhB,CAAuBL,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgBR,MAAM,CAACI,OAAnD;AAFL,SAAP;AAIA;;AACD;AACC,aAAO,EAAE,GAAGN;AAAL,OAAP;AA1BF;AA4BA,CA7BM","sourcesContent":["import * as actionTypes from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.ADD_TO_CART: {\r\n\t\t\tconst item = action.payload;\r\n\r\n\t\t\tconst existInCart = state.cartItems.find(x => x.productId == item.productId);\r\n\r\n\t\t\tif (existInCart) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcartItems: state.cartItems.map(x => (x.productId === existItem.productId ? item : x))\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcartItems: [ ...state.cartItems, item ]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase actionTypes.REMOVE_FROM_CART: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcartItems: state.cartItems.filter(x => x.productId !== action.payload)\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn { ...state };\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}