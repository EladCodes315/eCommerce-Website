{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elada\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\Fullstack Projects\\\\eCommerce-Website\\\\frontend\\\\src\\\\screens\\\\LoginScreenComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './LoginScreenComp.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport * as actionTypes from '../redux/constants/accountConstants';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreenComp = ({\n  history\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const loginFunc = async () => {\n    let account = {\n      username,\n      password\n    };\n    let {\n      data\n    } = await axios.post('http://localhost:4000/login', account);\n\n    if (data.account) {\n      dispatch({\n        type: actionTypes.LOGIN_ACCOUNT,\n        payload: data.account._id\n      });\n      history.push('/');\n    } else if (data === 'User Not Found') {\n      alert('User Not Found');\n    } else if (data === 'Invalid Password') {\n      alert('Invalid Password');\n    } else {\n      alert('Server Error');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginscreen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user-circle\",\n        style: {\n          fontSize: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login-labels\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login-labels\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: loginFunc,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register-link\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Sign Up!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LoginScreenComp, \"vd663F8lSZ0/sNSKrSVyV0hg4rU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginScreenComp;\nexport default LoginScreenComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreenComp\");","map":{"version":3,"sources":["C:/Users/elada/OneDrive/שולחן העבודה/Fullstack Projects/eCommerce-Website/frontend/src/screens/LoginScreenComp.js"],"names":["React","useState","Link","axios","actionTypes","useDispatch","LoginScreenComp","history","username","setUsername","password","setPassword","dispatch","loginFunc","account","data","post","type","LOGIN_ACCOUNT","payload","_id","push","alert","fontSize","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,uBAAP;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,qCAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACxC,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAES,QAAF,EAAYC,WAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMW,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,SAAS,GAAG,YAAY;AAC7B,QAAIC,OAAO,GAAG;AACbN,MAAAA,QADa;AAEbE,MAAAA;AAFa,KAAd;AAIA,QAAI;AAAEK,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAW,6BAAX,EAA0CF,OAA1C,CAArB;;AACA,QAAIC,IAAI,CAACD,OAAT,EAAkB;AACjBF,MAAAA,QAAQ,CAAC;AACRK,QAAAA,IAAI,EAAEb,WAAW,CAACc,aADV;AAERC,QAAAA,OAAO,EAAEJ,IAAI,CAACD,OAAL,CAAaM;AAFd,OAAD,CAAR;AAIAb,MAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACA,KAND,MAOK,IAAIN,IAAI,KAAK,gBAAb,EAA+B;AACnCO,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACA,KAFI,MAGA,IAAIP,IAAI,KAAK,kBAAb,EAAiC;AACrCO,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACA,KAFI,MAGA;AACJA,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD,GAtBD;;AAwBA,sBACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACC;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAkC,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAzC;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEC,CAAC,IAAIf,WAAW,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAA7C;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAMC;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAEF,CAAC,IAAIb,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjD;AAAA;AAAA;AAAA;AAAA,cAND,eAOC;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEb,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPD,eAUC;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA,2DACwB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA,CAhDD;;GAAMP,e;UAIYD,W;;;KAJZC,e;AAkDN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './LoginScreenComp.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as actionTypes from '../redux/constants/accountConstants';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst LoginScreenComp = ({ history }) => {\r\n\tconst [ username, setUsername ] = useState('');\r\n\tconst [ password, setPassword ] = useState('');\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst loginFunc = async () => {\r\n\t\tlet account = {\r\n\t\t\tusername,\r\n\t\t\tpassword\r\n\t\t};\r\n\t\tlet { data } = await axios.post('http://localhost:4000/login', account);\r\n\t\tif (data.account) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: actionTypes.LOGIN_ACCOUNT,\r\n\t\t\t\tpayload: data.account._id\r\n\t\t\t});\r\n\t\t\thistory.push('/');\r\n\t\t}\r\n\t\telse if (data === 'User Not Found') {\r\n\t\t\talert('User Not Found');\r\n\t\t}\r\n\t\telse if (data === 'Invalid Password') {\r\n\t\t\talert('Invalid Password');\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert('Server Error');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"loginscreen\">\r\n\t\t\t<div className=\"login-container\">\r\n\t\t\t\t<i className=\"fas fa-user-circle\" style={{ fontSize: '50px' }} />\r\n\t\t\t\t<h2 className=\"login-title\">Login</h2>\r\n\t\t\t\t<label className=\"login-labels\">Username</label>\r\n\t\t\t\t<input type=\"text\" onChange={e => setUsername(e.target.value)} />\r\n\t\t\t\t<label className=\"login-labels\">Password</label>\r\n\t\t\t\t<input type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n\t\t\t\t<button className=\"login-btn\" onClick={loginFunc}>\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</button>\r\n\t\t\t\t<p className=\"register-link\">\r\n\t\t\t\t\tDon't have an account? <Link to=\"/register\">Sign Up!</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoginScreenComp;\r\n"]},"metadata":{},"sourceType":"module"}